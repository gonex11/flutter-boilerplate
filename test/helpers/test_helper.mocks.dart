// Mocks generated by Mockito 5.4.4 from annotations
// in flutter_boilerplate/test/helpers/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i9;
import 'dart:ui' as _i11;

import 'package:dartz/dartz.dart' as _i3;
import 'package:dio/dio.dart' as _i6;
import 'package:flutter/widgets.dart' as _i23;
import 'package:flutter_boilerplate/core/common/failures.dart' as _i13;
import 'package:flutter_boilerplate/core/common/network_info.dart' as _i25;
import 'package:flutter_boilerplate/core/common/token_manager.dart' as _i24;
import 'package:flutter_boilerplate/core/services/api_service.dart' as _i22;
import 'package:flutter_boilerplate/data/data_sources/local/auth_local_data_source.dart'
    as _i17;
import 'package:flutter_boilerplate/data/data_sources/local/db/users_db.dart'
    as _i20;
import 'package:flutter_boilerplate/data/data_sources/local/user_local_data_source.dart'
    as _i19;
import 'package:flutter_boilerplate/data/data_sources/remote/auth_remote_data_source.dart'
    as _i16;
import 'package:flutter_boilerplate/data/data_sources/remote/user_remote_data_source.dart'
    as _i18;
import 'package:flutter_boilerplate/data/models/token_model.dart' as _i5;
import 'package:flutter_boilerplate/data/models/user_model.dart' as _i4;
import 'package:flutter_boilerplate/data/models/user_payload.dart' as _i15;
import 'package:flutter_boilerplate/data/models/user_type.dart' as _i21;
import 'package:flutter_boilerplate/data/repositories/auth_repository.dart'
    as _i12;
import 'package:flutter_boilerplate/data/repositories/user_repository.dart'
    as _i14;
import 'package:flutter_boilerplate/presentation/controllers/home_controller.dart'
    as _i8;
import 'package:flutter_secure_storage/flutter_secure_storage.dart' as _i7;
import 'package:get/get.dart' as _i2;
import 'package:get/get_state_manager/src/simple/list_notifier.dart' as _i10;
import 'package:hive/hive.dart' as _i26;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i27;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeRxBool_0 extends _i1.SmartFake implements _i2.RxBool {
  _FakeRxBool_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInternalFinalCallback_1<T> extends _i1.SmartFake
    implements _i2.InternalFinalCallback<T> {
  _FakeInternalFinalCallback_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRxStatus_2 extends _i1.SmartFake implements _i2.RxStatus {
  _FakeRxStatus_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_3<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserModel_4 extends _i1.SmartFake implements _i4.UserModel {
  _FakeUserModel_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTokenModel_5 extends _i1.SmartFake implements _i5.TokenModel {
  _FakeTokenModel_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_6<T> extends _i1.SmartFake implements _i6.Response<T> {
  _FakeResponse_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIOSOptions_7 extends _i1.SmartFake implements _i7.IOSOptions {
  _FakeIOSOptions_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAndroidOptions_8 extends _i1.SmartFake
    implements _i7.AndroidOptions {
  _FakeAndroidOptions_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLinuxOptions_9 extends _i1.SmartFake implements _i7.LinuxOptions {
  _FakeLinuxOptions_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWindowsOptions_10 extends _i1.SmartFake
    implements _i7.WindowsOptions {
  _FakeWindowsOptions_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWebOptions_11 extends _i1.SmartFake implements _i7.WebOptions {
  _FakeWebOptions_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMacOsOptions_12 extends _i1.SmartFake implements _i7.MacOsOptions {
  _FakeMacOsOptions_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [HomeController].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeController extends _i1.Mock implements _i8.HomeController {
  MockHomeController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.RxBool get isLoggedOut => (super.noSuchMethod(
        Invocation.getter(#isLoggedOut),
        returnValue: _FakeRxBool_0(
          this,
          Invocation.getter(#isLoggedOut),
        ),
      ) as _i2.RxBool);

  @override
  _i2.InternalFinalCallback<void> get onStart => (super.noSuchMethod(
        Invocation.getter(#onStart),
        returnValue: _FakeInternalFinalCallback_1<void>(
          this,
          Invocation.getter(#onStart),
        ),
      ) as _i2.InternalFinalCallback<void>);

  @override
  _i2.InternalFinalCallback<void> get onDelete => (super.noSuchMethod(
        Invocation.getter(#onDelete),
        returnValue: _FakeInternalFinalCallback_1<void>(
          this,
          Invocation.getter(#onDelete),
        ),
      ) as _i2.InternalFinalCallback<void>);

  @override
  bool get initialized => (super.noSuchMethod(
        Invocation.getter(#initialized),
        returnValue: false,
      ) as bool);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  int get listeners => (super.noSuchMethod(
        Invocation.getter(#listeners),
        returnValue: 0,
      ) as int);

  @override
  _i2.RxStatus get status => (super.noSuchMethod(
        Invocation.getter(#status),
        returnValue: _FakeRxStatus_2(
          this,
          Invocation.getter(#status),
        ),
      ) as _i2.RxStatus);

  @override
  set value(List<_i4.UserModel>? newValue) => super.noSuchMethod(
        Invocation.setter(
          #value,
          newValue,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.Future<void> onInit() => (super.noSuchMethod(
        Invocation.method(
          #onInit,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> getUsers([bool? refresh = false]) => (super.noSuchMethod(
        Invocation.method(
          #getUsers,
          [refresh],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> logout() => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  void update([
    List<Object>? ids,
    bool? condition = true,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #update,
          [
            ids,
            condition,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onReady() => super.noSuchMethod(
        Invocation.method(
          #onReady,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onClose() => super.noSuchMethod(
        Invocation.method(
          #onClose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void $configureLifeCycle() => super.noSuchMethod(
        Invocation.method(
          #$configureLifeCycle,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i10.Disposer addListener(_i10.GetStateUpdate? listener) =>
      (super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValue: () {},
      ) as _i10.Disposer);

  @override
  void removeListener(_i11.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void refresh() => super.noSuchMethod(
        Invocation.method(
          #refresh,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void refreshGroup(Object? id) => super.noSuchMethod(
        Invocation.method(
          #refreshGroup,
          [id],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyChildrens() => super.noSuchMethod(
        Invocation.method(
          #notifyChildrens,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListenerId(
    Object? id,
    _i11.VoidCallback? listener,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #removeListenerId,
          [
            id,
            listener,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i10.Disposer addListenerId(
    Object? key,
    _i10.GetStateUpdate? listener,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addListenerId,
          [
            key,
            listener,
          ],
        ),
        returnValue: () {},
      ) as _i10.Disposer);

  @override
  void disposeId(Object? id) => super.noSuchMethod(
        Invocation.method(
          #disposeId,
          [id],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void change(
    List<_i4.UserModel>? newState, {
    _i2.RxStatus? status,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #change,
          [newState],
          {#status: status},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void append(
    _i9.Future<List<_i4.UserModel>> Function() Function()? body, {
    String? errorMessage,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #append,
          [body],
          {#errorMessage: errorMessage},
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends _i1.Mock implements _i12.AuthRepository {
  MockAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<_i3.Either<_i13.Failure, _i5.TokenModel>> login(
    String? username,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [
            username,
            password,
          ],
        ),
        returnValue: _i9.Future<_i3.Either<_i13.Failure, _i5.TokenModel>>.value(
            _FakeEither_3<_i13.Failure, _i5.TokenModel>(
          this,
          Invocation.method(
            #login,
            [
              username,
              password,
            ],
          ),
        )),
      ) as _i9.Future<_i3.Either<_i13.Failure, _i5.TokenModel>>);

  @override
  _i9.Future<_i3.Either<_i13.Failure, _i4.UserModel>> getLoggedUser() =>
      (super.noSuchMethod(
        Invocation.method(
          #getLoggedUser,
          [],
        ),
        returnValue: _i9.Future<_i3.Either<_i13.Failure, _i4.UserModel>>.value(
            _FakeEither_3<_i13.Failure, _i4.UserModel>(
          this,
          Invocation.method(
            #getLoggedUser,
            [],
          ),
        )),
      ) as _i9.Future<_i3.Either<_i13.Failure, _i4.UserModel>>);

  @override
  _i9.Future<bool> logout() => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);
}

/// A class which mocks [UserRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRepository extends _i1.Mock implements _i14.UserRepository {
  MockUserRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<_i3.Either<_i13.Failure, List<_i4.UserModel>>> getUsers() =>
      (super.noSuchMethod(
        Invocation.method(
          #getUsers,
          [],
        ),
        returnValue:
            _i9.Future<_i3.Either<_i13.Failure, List<_i4.UserModel>>>.value(
                _FakeEither_3<_i13.Failure, List<_i4.UserModel>>(
          this,
          Invocation.method(
            #getUsers,
            [],
          ),
        )),
      ) as _i9.Future<_i3.Either<_i13.Failure, List<_i4.UserModel>>>);

  @override
  _i9.Future<List<_i4.UserModel>> getCacheUsers() => (super.noSuchMethod(
        Invocation.method(
          #getCacheUsers,
          [],
        ),
        returnValue: _i9.Future<List<_i4.UserModel>>.value(<_i4.UserModel>[]),
      ) as _i9.Future<List<_i4.UserModel>>);

  @override
  _i9.Future<_i3.Either<_i13.Failure, _i4.UserModel>> getUserById(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserById,
          [id],
        ),
        returnValue: _i9.Future<_i3.Either<_i13.Failure, _i4.UserModel>>.value(
            _FakeEither_3<_i13.Failure, _i4.UserModel>(
          this,
          Invocation.method(
            #getUserById,
            [id],
          ),
        )),
      ) as _i9.Future<_i3.Either<_i13.Failure, _i4.UserModel>>);

  @override
  _i9.Future<_i3.Either<_i13.Failure, _i4.UserModel>> createUser(
          _i15.UserPayload? payload) =>
      (super.noSuchMethod(
        Invocation.method(
          #createUser,
          [payload],
        ),
        returnValue: _i9.Future<_i3.Either<_i13.Failure, _i4.UserModel>>.value(
            _FakeEither_3<_i13.Failure, _i4.UserModel>(
          this,
          Invocation.method(
            #createUser,
            [payload],
          ),
        )),
      ) as _i9.Future<_i3.Either<_i13.Failure, _i4.UserModel>>);
}

/// A class which mocks [AuthRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRemoteDataSource extends _i1.Mock
    implements _i16.AuthRemoteDataSource {
  MockAuthRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<_i4.UserModel> getLoggedUser() => (super.noSuchMethod(
        Invocation.method(
          #getLoggedUser,
          [],
        ),
        returnValue: _i9.Future<_i4.UserModel>.value(_FakeUserModel_4(
          this,
          Invocation.method(
            #getLoggedUser,
            [],
          ),
        )),
      ) as _i9.Future<_i4.UserModel>);

  @override
  _i9.Future<_i5.TokenModel> login(
    String? username,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [
            username,
            password,
          ],
        ),
        returnValue: _i9.Future<_i5.TokenModel>.value(_FakeTokenModel_5(
          this,
          Invocation.method(
            #login,
            [
              username,
              password,
            ],
          ),
        )),
      ) as _i9.Future<_i5.TokenModel>);

  @override
  _i9.Future<_i5.TokenModel> refreshToken(String? refreshToken) =>
      (super.noSuchMethod(
        Invocation.method(
          #refreshToken,
          [refreshToken],
        ),
        returnValue: _i9.Future<_i5.TokenModel>.value(_FakeTokenModel_5(
          this,
          Invocation.method(
            #refreshToken,
            [refreshToken],
          ),
        )),
      ) as _i9.Future<_i5.TokenModel>);
}

/// A class which mocks [AuthLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthLocalDataSource extends _i1.Mock
    implements _i17.AuthLocalDataSource {
  MockAuthLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<bool> isTokenExpired() => (super.noSuchMethod(
        Invocation.method(
          #isTokenExpired,
          [],
        ),
        returnValue: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);

  @override
  _i9.Future<bool> setUserSession(_i4.UserModel? user) => (super.noSuchMethod(
        Invocation.method(
          #setUserSession,
          [user],
        ),
        returnValue: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);

  @override
  _i9.Future<_i4.UserModel?> getUserSession() => (super.noSuchMethod(
        Invocation.method(
          #getUserSession,
          [],
        ),
        returnValue: _i9.Future<_i4.UserModel?>.value(),
      ) as _i9.Future<_i4.UserModel?>);

  @override
  _i9.Future<bool> setToken(_i5.TokenModel? tokenResponse) =>
      (super.noSuchMethod(
        Invocation.method(
          #setToken,
          [tokenResponse],
        ),
        returnValue: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);

  @override
  _i9.Future<String?> getAccessToken() => (super.noSuchMethod(
        Invocation.method(
          #getAccessToken,
          [],
        ),
        returnValue: _i9.Future<String?>.value(),
      ) as _i9.Future<String?>);

  @override
  _i9.Future<String?> getRefreshToken() => (super.noSuchMethod(
        Invocation.method(
          #getRefreshToken,
          [],
        ),
        returnValue: _i9.Future<String?>.value(),
      ) as _i9.Future<String?>);

  @override
  _i9.Future<bool> clearSession() => (super.noSuchMethod(
        Invocation.method(
          #clearSession,
          [],
        ),
        returnValue: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);
}

/// A class which mocks [UserRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRemoteDataSource extends _i1.Mock
    implements _i18.UserRemoteDataSource {
  MockUserRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<List<_i4.UserModel>> getUsers() => (super.noSuchMethod(
        Invocation.method(
          #getUsers,
          [],
        ),
        returnValue: _i9.Future<List<_i4.UserModel>>.value(<_i4.UserModel>[]),
      ) as _i9.Future<List<_i4.UserModel>>);

  @override
  _i9.Future<_i4.UserModel> getUserById(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getUserById,
          [id],
        ),
        returnValue: _i9.Future<_i4.UserModel>.value(_FakeUserModel_4(
          this,
          Invocation.method(
            #getUserById,
            [id],
          ),
        )),
      ) as _i9.Future<_i4.UserModel>);

  @override
  _i9.Future<_i4.UserModel> createUser(_i15.UserPayload? payload) =>
      (super.noSuchMethod(
        Invocation.method(
          #createUser,
          [payload],
        ),
        returnValue: _i9.Future<_i4.UserModel>.value(_FakeUserModel_4(
          this,
          Invocation.method(
            #createUser,
            [payload],
          ),
        )),
      ) as _i9.Future<_i4.UserModel>);
}

/// A class which mocks [UserLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserLocalDataSource extends _i1.Mock
    implements _i19.UserLocalDataSource {
  MockUserLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<bool> cacheUsers(List<_i4.UserModel>? users) =>
      (super.noSuchMethod(
        Invocation.method(
          #cacheUsers,
          [users],
        ),
        returnValue: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);

  @override
  _i9.Future<List<_i4.UserModel>> getCacheUsers() => (super.noSuchMethod(
        Invocation.method(
          #getCacheUsers,
          [],
        ),
        returnValue: _i9.Future<List<_i4.UserModel>>.value(<_i4.UserModel>[]),
      ) as _i9.Future<List<_i4.UserModel>>);
}

/// A class which mocks [UsersDb].
///
/// See the documentation for Mockito's code generation for more information.
class MockUsersDb extends _i1.Mock implements _i20.UsersDb {
  MockUsersDb() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<bool> insertCacheUsers(List<_i21.UserType>? users) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertCacheUsers,
          [users],
        ),
        returnValue: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);

  @override
  List<_i21.UserType> getCacheUsers() => (super.noSuchMethod(
        Invocation.method(
          #getCacheUsers,
          [],
        ),
        returnValue: <_i21.UserType>[],
      ) as List<_i21.UserType>);
}

/// A class which mocks [ApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiService extends _i1.Mock implements _i22.ApiService {
  MockApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<_i6.Response<dynamic>> get(
    String? endpoint, {
    Map<String, String>? customHeaders,
    Map<String, dynamic>? queryParams,
    bool? authorized = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [endpoint],
          {
            #customHeaders: customHeaders,
            #queryParams: queryParams,
            #authorized: authorized,
          },
        ),
        returnValue:
            _i9.Future<_i6.Response<dynamic>>.value(_FakeResponse_6<dynamic>(
          this,
          Invocation.method(
            #get,
            [endpoint],
            {
              #customHeaders: customHeaders,
              #queryParams: queryParams,
              #authorized: authorized,
            },
          ),
        )),
      ) as _i9.Future<_i6.Response<dynamic>>);

  @override
  _i9.Future<_i6.Response<dynamic>> post(
    String? endpoint, {
    required Object? data,
    Map<String, String>? customHeaders,
    Map<String, dynamic>? queryParams,
    bool? authorized = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [endpoint],
          {
            #data: data,
            #customHeaders: customHeaders,
            #queryParams: queryParams,
            #authorized: authorized,
          },
        ),
        returnValue:
            _i9.Future<_i6.Response<dynamic>>.value(_FakeResponse_6<dynamic>(
          this,
          Invocation.method(
            #post,
            [endpoint],
            {
              #data: data,
              #customHeaders: customHeaders,
              #queryParams: queryParams,
              #authorized: authorized,
            },
          ),
        )),
      ) as _i9.Future<_i6.Response<dynamic>>);

  @override
  _i9.Future<_i6.Response<dynamic>> delete(
    String? endpoint, {
    required Object? data,
    Map<String, String>? customHeaders,
    Map<String, dynamic>? queryParams,
    bool? authorized = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [endpoint],
          {
            #data: data,
            #customHeaders: customHeaders,
            #queryParams: queryParams,
            #authorized: authorized,
          },
        ),
        returnValue:
            _i9.Future<_i6.Response<dynamic>>.value(_FakeResponse_6<dynamic>(
          this,
          Invocation.method(
            #delete,
            [endpoint],
            {
              #data: data,
              #customHeaders: customHeaders,
              #queryParams: queryParams,
              #authorized: authorized,
            },
          ),
        )),
      ) as _i9.Future<_i6.Response<dynamic>>);

  @override
  _i9.Future<_i6.Response<dynamic>> patch(
    String? endpoint, {
    required Object? data,
    Map<String, String>? customHeaders,
    Map<String, dynamic>? queryParams,
    bool? authorized = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [endpoint],
          {
            #data: data,
            #customHeaders: customHeaders,
            #queryParams: queryParams,
            #authorized: authorized,
          },
        ),
        returnValue:
            _i9.Future<_i6.Response<dynamic>>.value(_FakeResponse_6<dynamic>(
          this,
          Invocation.method(
            #patch,
            [endpoint],
            {
              #data: data,
              #customHeaders: customHeaders,
              #queryParams: queryParams,
              #authorized: authorized,
            },
          ),
        )),
      ) as _i9.Future<_i6.Response<dynamic>>);

  @override
  _i9.Future<_i6.Response<dynamic>> put(
    String? endpoint, {
    required Object? data,
    Map<String, String>? customHeaders,
    Map<String, dynamic>? queryParams,
    bool? authorized = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [endpoint],
          {
            #data: data,
            #customHeaders: customHeaders,
            #queryParams: queryParams,
            #authorized: authorized,
          },
        ),
        returnValue:
            _i9.Future<_i6.Response<dynamic>>.value(_FakeResponse_6<dynamic>(
          this,
          Invocation.method(
            #put,
            [endpoint],
            {
              #data: data,
              #customHeaders: customHeaders,
              #queryParams: queryParams,
              #authorized: authorized,
            },
          ),
        )),
      ) as _i9.Future<_i6.Response<dynamic>>);

  @override
  _i9.Future<_i6.Response<dynamic>> postMultipart(
    String? endpoint, {
    required _i6.FormData? formData,
    Map<String, String>? customHeaders,
    Map<String, dynamic>? queryParams,
    bool? authorized = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #postMultipart,
          [endpoint],
          {
            #formData: formData,
            #customHeaders: customHeaders,
            #queryParams: queryParams,
            #authorized: authorized,
          },
        ),
        returnValue:
            _i9.Future<_i6.Response<dynamic>>.value(_FakeResponse_6<dynamic>(
          this,
          Invocation.method(
            #postMultipart,
            [endpoint],
            {
              #formData: formData,
              #customHeaders: customHeaders,
              #queryParams: queryParams,
              #authorized: authorized,
            },
          ),
        )),
      ) as _i9.Future<_i6.Response<dynamic>>);

  @override
  _i9.Future<_i6.Response<dynamic>> patchMultipart(
    String? endpoint, {
    required _i6.FormData? formData,
    Map<String, String>? customHeaders,
    Map<String, dynamic>? queryParams,
    bool? authorized = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patchMultipart,
          [endpoint],
          {
            #formData: formData,
            #customHeaders: customHeaders,
            #queryParams: queryParams,
            #authorized: authorized,
          },
        ),
        returnValue:
            _i9.Future<_i6.Response<dynamic>>.value(_FakeResponse_6<dynamic>(
          this,
          Invocation.method(
            #patchMultipart,
            [endpoint],
            {
              #formData: formData,
              #customHeaders: customHeaders,
              #queryParams: queryParams,
              #authorized: authorized,
            },
          ),
        )),
      ) as _i9.Future<_i6.Response<dynamic>>);

  @override
  _i9.Future<_i6.Response<dynamic>> putMultipart(
    String? endpoint, {
    required _i6.FormData? formData,
    Map<String, String>? customHeaders,
    Map<String, dynamic>? queryParams,
    bool? authorized = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putMultipart,
          [endpoint],
          {
            #formData: formData,
            #customHeaders: customHeaders,
            #queryParams: queryParams,
            #authorized: authorized,
          },
        ),
        returnValue:
            _i9.Future<_i6.Response<dynamic>>.value(_FakeResponse_6<dynamic>(
          this,
          Invocation.method(
            #putMultipart,
            [endpoint],
            {
              #formData: formData,
              #customHeaders: customHeaders,
              #queryParams: queryParams,
              #authorized: authorized,
            },
          ),
        )),
      ) as _i9.Future<_i6.Response<dynamic>>);
}

/// A class which mocks [FlutterSecureStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockFlutterSecureStorage extends _i1.Mock
    implements _i7.FlutterSecureStorage {
  MockFlutterSecureStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.IOSOptions get iOptions => (super.noSuchMethod(
        Invocation.getter(#iOptions),
        returnValue: _FakeIOSOptions_7(
          this,
          Invocation.getter(#iOptions),
        ),
      ) as _i7.IOSOptions);

  @override
  _i7.AndroidOptions get aOptions => (super.noSuchMethod(
        Invocation.getter(#aOptions),
        returnValue: _FakeAndroidOptions_8(
          this,
          Invocation.getter(#aOptions),
        ),
      ) as _i7.AndroidOptions);

  @override
  _i7.LinuxOptions get lOptions => (super.noSuchMethod(
        Invocation.getter(#lOptions),
        returnValue: _FakeLinuxOptions_9(
          this,
          Invocation.getter(#lOptions),
        ),
      ) as _i7.LinuxOptions);

  @override
  _i7.WindowsOptions get wOptions => (super.noSuchMethod(
        Invocation.getter(#wOptions),
        returnValue: _FakeWindowsOptions_10(
          this,
          Invocation.getter(#wOptions),
        ),
      ) as _i7.WindowsOptions);

  @override
  _i7.WebOptions get webOptions => (super.noSuchMethod(
        Invocation.getter(#webOptions),
        returnValue: _FakeWebOptions_11(
          this,
          Invocation.getter(#webOptions),
        ),
      ) as _i7.WebOptions);

  @override
  _i7.MacOsOptions get mOptions => (super.noSuchMethod(
        Invocation.getter(#mOptions),
        returnValue: _FakeMacOsOptions_12(
          this,
          Invocation.getter(#mOptions),
        ),
      ) as _i7.MacOsOptions);

  @override
  void registerListener({
    required String? key,
    required _i23.ValueChanged<String?>? listener,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #registerListener,
          [],
          {
            #key: key,
            #listener: listener,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void unregisterListener({
    required String? key,
    required _i23.ValueChanged<String?>? listener,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #unregisterListener,
          [],
          {
            #key: key,
            #listener: listener,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void unregisterAllListenersForKey({required String? key}) =>
      super.noSuchMethod(
        Invocation.method(
          #unregisterAllListenersForKey,
          [],
          {#key: key},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void unregisterAllListeners() => super.noSuchMethod(
        Invocation.method(
          #unregisterAllListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.Future<void> write({
    required String? key,
    required String? value,
    _i7.IOSOptions? iOptions,
    _i7.AndroidOptions? aOptions,
    _i7.LinuxOptions? lOptions,
    _i7.WebOptions? webOptions,
    _i7.MacOsOptions? mOptions,
    _i7.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #write,
          [],
          {
            #key: key,
            #value: value,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<String?> read({
    required String? key,
    _i7.IOSOptions? iOptions,
    _i7.AndroidOptions? aOptions,
    _i7.LinuxOptions? lOptions,
    _i7.WebOptions? webOptions,
    _i7.MacOsOptions? mOptions,
    _i7.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [],
          {
            #key: key,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i9.Future<String?>.value(),
      ) as _i9.Future<String?>);

  @override
  _i9.Future<bool> containsKey({
    required String? key,
    _i7.IOSOptions? iOptions,
    _i7.AndroidOptions? aOptions,
    _i7.LinuxOptions? lOptions,
    _i7.WebOptions? webOptions,
    _i7.MacOsOptions? mOptions,
    _i7.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #containsKey,
          [],
          {
            #key: key,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);

  @override
  _i9.Future<void> delete({
    required String? key,
    _i7.IOSOptions? iOptions,
    _i7.AndroidOptions? aOptions,
    _i7.LinuxOptions? lOptions,
    _i7.WebOptions? webOptions,
    _i7.MacOsOptions? mOptions,
    _i7.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [],
          {
            #key: key,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<Map<String, String>> readAll({
    _i7.IOSOptions? iOptions,
    _i7.AndroidOptions? aOptions,
    _i7.LinuxOptions? lOptions,
    _i7.WebOptions? webOptions,
    _i7.MacOsOptions? mOptions,
    _i7.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readAll,
          [],
          {
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i9.Future<Map<String, String>>.value(<String, String>{}),
      ) as _i9.Future<Map<String, String>>);

  @override
  _i9.Future<void> deleteAll({
    _i7.IOSOptions? iOptions,
    _i7.AndroidOptions? aOptions,
    _i7.LinuxOptions? lOptions,
    _i7.WebOptions? webOptions,
    _i7.MacOsOptions? mOptions,
    _i7.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteAll,
          [],
          {
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<bool?> isCupertinoProtectedDataAvailable() => (super.noSuchMethod(
        Invocation.method(
          #isCupertinoProtectedDataAvailable,
          [],
        ),
        returnValue: _i9.Future<bool?>.value(),
      ) as _i9.Future<bool?>);
}

/// A class which mocks [TokenManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockTokenManager extends _i1.Mock implements _i24.TokenManager {
  MockTokenManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<bool> isTokenExpired(String? token) => (super.noSuchMethod(
        Invocation.method(
          #isTokenExpired,
          [token],
        ),
        returnValue: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i25.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);

  @override
  _i9.Stream<bool> get onConnectivityChanged => (super.noSuchMethod(
        Invocation.getter(#onConnectivityChanged),
        returnValue: _i9.Stream<bool>.empty(),
      ) as _i9.Stream<bool>);
}

/// A class which mocks [Box].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserTypeBox extends _i1.Mock implements _i26.Box<_i21.UserType> {
  MockUserTypeBox() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Iterable<_i21.UserType> get values => (super.noSuchMethod(
        Invocation.getter(#values),
        returnValue: <_i21.UserType>[],
      ) as Iterable<_i21.UserType>);

  @override
  String get name => (super.noSuchMethod(
        Invocation.getter(#name),
        returnValue: _i27.dummyValue<String>(
          this,
          Invocation.getter(#name),
        ),
      ) as String);

  @override
  bool get isOpen => (super.noSuchMethod(
        Invocation.getter(#isOpen),
        returnValue: false,
      ) as bool);

  @override
  bool get lazy => (super.noSuchMethod(
        Invocation.getter(#lazy),
        returnValue: false,
      ) as bool);

  @override
  Iterable<dynamic> get keys => (super.noSuchMethod(
        Invocation.getter(#keys),
        returnValue: <dynamic>[],
      ) as Iterable<dynamic>);

  @override
  int get length => (super.noSuchMethod(
        Invocation.getter(#length),
        returnValue: 0,
      ) as int);

  @override
  bool get isEmpty => (super.noSuchMethod(
        Invocation.getter(#isEmpty),
        returnValue: false,
      ) as bool);

  @override
  bool get isNotEmpty => (super.noSuchMethod(
        Invocation.getter(#isNotEmpty),
        returnValue: false,
      ) as bool);

  @override
  Iterable<_i21.UserType> valuesBetween({
    dynamic startKey,
    dynamic endKey,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #valuesBetween,
          [],
          {
            #startKey: startKey,
            #endKey: endKey,
          },
        ),
        returnValue: <_i21.UserType>[],
      ) as Iterable<_i21.UserType>);

  @override
  _i21.UserType? getAt(int? index) => (super.noSuchMethod(Invocation.method(
        #getAt,
        [index],
      )) as _i21.UserType?);

  @override
  Map<dynamic, _i21.UserType> toMap() => (super.noSuchMethod(
        Invocation.method(
          #toMap,
          [],
        ),
        returnValue: <dynamic, _i21.UserType>{},
      ) as Map<dynamic, _i21.UserType>);

  @override
  dynamic keyAt(int? index) => super.noSuchMethod(Invocation.method(
        #keyAt,
        [index],
      ));

  @override
  _i9.Stream<_i26.BoxEvent> watch({dynamic key}) => (super.noSuchMethod(
        Invocation.method(
          #watch,
          [],
          {#key: key},
        ),
        returnValue: _i9.Stream<_i26.BoxEvent>.empty(),
      ) as _i9.Stream<_i26.BoxEvent>);

  @override
  bool containsKey(dynamic key) => (super.noSuchMethod(
        Invocation.method(
          #containsKey,
          [key],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i9.Future<void> put(
    dynamic key,
    _i21.UserType? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [
            key,
            value,
          ],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> putAt(
    int? index,
    _i21.UserType? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #putAt,
          [
            index,
            value,
          ],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> putAll(Map<dynamic, _i21.UserType>? entries) =>
      (super.noSuchMethod(
        Invocation.method(
          #putAll,
          [entries],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<int> add(_i21.UserType? value) => (super.noSuchMethod(
        Invocation.method(
          #add,
          [value],
        ),
        returnValue: _i9.Future<int>.value(0),
      ) as _i9.Future<int>);

  @override
  _i9.Future<Iterable<int>> addAll(Iterable<_i21.UserType>? values) =>
      (super.noSuchMethod(
        Invocation.method(
          #addAll,
          [values],
        ),
        returnValue: _i9.Future<Iterable<int>>.value(<int>[]),
      ) as _i9.Future<Iterable<int>>);

  @override
  _i9.Future<void> delete(dynamic key) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [key],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> deleteAt(int? index) => (super.noSuchMethod(
        Invocation.method(
          #deleteAt,
          [index],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> deleteAll(Iterable<dynamic>? keys) => (super.noSuchMethod(
        Invocation.method(
          #deleteAll,
          [keys],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> compact() => (super.noSuchMethod(
        Invocation.method(
          #compact,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<int> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i9.Future<int>.value(0),
      ) as _i9.Future<int>);

  @override
  _i9.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> deleteFromDisk() => (super.noSuchMethod(
        Invocation.method(
          #deleteFromDisk,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> flush() => (super.noSuchMethod(
        Invocation.method(
          #flush,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
}
